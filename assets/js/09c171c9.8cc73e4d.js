"use strict";(self.webpackChunkcraco_website=self.webpackChunkcraco_website||[]).push([[5214],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),i=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=i(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,c=e.originalType,l=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),f=i(n),d=o,m=f["".concat(l,".").concat(d)]||f[d]||u[d]||c;return n?r.createElement(m,s(s({ref:t},p),{},{components:n})):r.createElement(m,s({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=n.length,s=new Array(c);s[0]=f;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:o,s[1]=a;for(var i=2;i<c;i++)s[i]=n[i];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},8566:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>c,metadata:()=>a,toc:()=>i});var r=n(7462),o=(n(7294),n(3905));const c={},s="Set css-loader locals convention",a={unversionedId:"set-css-loader-locals-convention",id:"set-css-loader-locals-convention",title:"Set css-loader locals convention",description:"",source:"@site/recipes/set-css-loader-locals-convention.md",sourceDirName:".",slug:"/set-css-loader-locals-convention",permalink:"/recipes/set-css-loader-locals-convention",draft:!1,editUrl:"https://github.com/dilanx/craco/tree/main/website/recipes/set-css-loader-locals-convention.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Extends PostCSS plugins",permalink:"/recipes/extends-postcss-plugins"},next:{title:"Use a Jest config file",permalink:"/recipes/use-a-jest-config-file"}},l={},i=[],p={toc:i};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"set-css-loader-locals-convention"},"Set css-loader locals convention"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="craco.config.js"',title:'"craco.config.js"'},"/**\n * This example shows how to add the localsConvention option to the css-loader.\n * Useful if you like to write CSS/SASS classes using BEM notation in css modules.\n * https://github.com/webpack-contrib/css-loader#localsconvention\n */\nmodule.exports = {\n  style: {\n    css: {\n      loaderOptions: {\n        localsConvention: 'camelCase',\n      },\n    },\n  },\n};\n")))}u.isMDXComponent=!0}}]);