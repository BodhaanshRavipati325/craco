"use strict";(self.webpackChunkcraco_website=self.webpackChunkcraco_website||[]).push([[9305],{3905:(e,r,n)=>{n.d(r,{Zo:()=>l,kt:()=>f});var t=n(7294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function a(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function s(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?a(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function c(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var d=t.createContext({}),i=function(e){var r=t.useContext(d),n=r;return e&&(n="function"==typeof e?e(r):s(s({},r),e)),n},l=function(e){var r=i(e.components);return t.createElement(d.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},u=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,a=e.originalType,d=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=i(n),f=o,b=u["".concat(d,".").concat(f)]||u[f]||p[f]||a;return n?t.createElement(b,s(s({ref:r},l),{},{components:n})):t.createElement(b,s({ref:r},l))}));function f(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=u;var c={};for(var d in r)hasOwnProperty.call(r,d)&&(c[d]=r[d]);c.originalType=e,c.mdxType="string"==typeof e?e:o,s[1]=c;for(var i=2;i<a;i++)s[i]=n[i];return t.createElement.apply(null,s)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6848:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>i});var t=n(7462),o=(n(7294),n(3905));const a={},s="Use ts-loader",c={unversionedId:"use-ts-loader",id:"use-ts-loader",title:"Use ts-loader",description:"",source:"@site/recipes/use-ts-loader.md",sourceDirName:".",slug:"/use-ts-loader",permalink:"/recipes/use-ts-loader",draft:!1,editUrl:"https://github.com/dilanx/craco/tree/main/website/recipes/use-ts-loader.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Use PureScript",permalink:"/recipes/use-purescript"}},d={},i=[],l={toc:i};function p(e){let{components:r,...n}=e;return(0,o.kt)("wrapper",(0,t.Z)({},l,n,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"use-ts-loader"},"Use ts-loader"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="craco.config.js"',title:'"craco.config.js"'},"// This recipe replaces usage of babel-loader for compilation of TypeScript / JavaScript application code\n// with ts-loader running in transpileOnly mode (as type checking is still performed by the\n// fork-ts-checker-webpack-plugin). Should further customisation of ts-loader be required, the options\n// below can be adjusted. babel-loader is still used to require non-application TypeScript / JavaScript\n// To use this, ensure you have added ts-loader as a dependency in your `package.json` first\nconst {\n  addAfterLoader,\n  removeLoaders,\n  loaderByName,\n  getLoaders,\n  throwUnexpectedConfigError,\n} = require('@craco/craco');\n\nconst throwError = (message) =>\n  throwUnexpectedConfigError({\n    packageName: 'craco',\n    githubRepo: 'gsoft-inc/craco',\n    message,\n    githubIssueQuery: 'webpack',\n  });\n\nmodule.exports = {\n  webpack: {\n    configure: (webpackConfig, { paths }) => {\n      const { hasFoundAny, matches } = getLoaders(\n        webpackConfig,\n        loaderByName('babel-loader')\n      );\n      if (!hasFoundAny) throwError('failed to find babel-loader');\n\n      console.log('removing babel-loader');\n      const { hasRemovedAny, removedCount } = removeLoaders(\n        webpackConfig,\n        loaderByName('babel-loader')\n      );\n      if (!hasRemovedAny) throwError('no babel-loader to remove');\n      if (removedCount !== 2)\n        throwError('had expected to remove 2 babel loader instances');\n\n      console.log('adding ts-loader');\n\n      const tsLoader = {\n        test: /\\.(js|mjs|jsx|ts|tsx)$/,\n        include: paths.appSrc,\n        loader: require.resolve('ts-loader'),\n        options: { transpileOnly: true },\n      };\n\n      const { isAdded: tsLoaderIsAdded } = addAfterLoader(\n        webpackConfig,\n        loaderByName('url-loader'),\n        tsLoader\n      );\n      if (!tsLoaderIsAdded) throwError('failed to add ts-loader');\n      console.log('added ts-loader');\n\n      console.log('adding non-application JS babel-loader back');\n      const { isAdded: babelLoaderIsAdded } = addAfterLoader(\n        webpackConfig,\n        loaderByName('ts-loader'),\n        matches[1].loader // babel-loader\n      );\n      if (!babelLoaderIsAdded)\n        throwError('failed to add back babel-loader for non-application JS');\n      console.log('added non-application JS babel-loader back');\n\n      return webpackConfig;\n    },\n  },\n};\n")))}p.isMDXComponent=!0}}]);