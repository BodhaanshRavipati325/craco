"use strict";(self.webpackChunkcraco_website=self.webpackChunkcraco_website||[]).push([[691],{3905:(e,n,t)=>{t.d(n,{Zo:()=>o,kt:()=>d});var i=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=i.createContext({}),c=function(e){var n=i.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},o=function(e){var n=c(e.components);return i.createElement(p.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},g=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,p=e.parentName,o=u(e,["components","mdxType","originalType","parentName"]),g=c(t),d=a,k=g["".concat(p,".").concat(d)]||g[d]||s[d]||r;return t?i.createElement(k,l(l({ref:n},o),{},{components:t})):i.createElement(k,l({ref:n},o))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,l=new Array(r);l[0]=g;var u={};for(var p in n)hasOwnProperty.call(n,p)&&(u[p]=n[p]);u.originalType=e,u.mdxType="string"==typeof e?e:a,l[1]=u;for(var c=2;c<r;c++)l[c]=t[c];return i.createElement.apply(null,l)}return i.createElement.apply(null,t)}g.displayName="MDXCreateElement"},9995:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>s,frontMatter:()=>r,metadata:()=>u,toc:()=>c});var i=t(7462),a=(t(7294),t(3905));const r={},l="Webpack Plugins",u={unversionedId:"plugin-api/utility-functions/webpack-plugins",id:"plugin-api/utility-functions/webpack-plugins",title:"Webpack Plugins",description:"Utility functions for Webpack plugins",source:"@site/docs/plugin-api/utility-functions/webpack-plugins.md",sourceDirName:"plugin-api/utility-functions",slug:"/plugin-api/utility-functions/webpack-plugins",permalink:"/docs/plugin-api/utility-functions/webpack-plugins",draft:!1,editUrl:"https://github.com/dilanx/craco/tree/main/website/docs/plugin-api/utility-functions/webpack-plugins.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Webpack Asset Modules",permalink:"/docs/plugin-api/utility-functions/webpack-asset-modules"},next:{title:"Miscellaneous",permalink:"/docs/plugin-api/utility-functions/miscellaneous"}},p={},c=[{value:"Functions",id:"functions",level:2},{value:"pluginByName",id:"pluginbyname",level:3},{value:"getPlugin",id:"getplugin",level:3},{value:"Return Type",id:"return-type",level:4},{value:"Usage",id:"usage",level:4},{value:"addPlugins",id:"addplugins",level:3},{value:"Usage",id:"usage-1",level:4},{value:"removePlugins",id:"removeplugins",level:3},{value:"Return Type",id:"return-type-1",level:4},{value:"Usage",id:"usage-2",level:4},{value:"Reference",id:"reference",level:2},{value:"WebpackConfig",id:"webpackconfig",level:3},{value:"PluginMatcher",id:"pluginmatcher",level:3},{value:"WebpackPlugin",id:"webpackplugin",level:3}],o={toc:c};function s(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,i.Z)({},o,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"webpack-plugins"},"Webpack Plugins"),(0,a.kt)("p",null,"Utility functions for ",(0,a.kt)("a",{parentName:"p",href:"https://webpack.js.org/plugins/"},"Webpack plugins")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const {\n  pluginByName,\n  getPlugin,\n  addPlugins,\n  removePlugins,\n} = require('@craco/craco');\n")),(0,a.kt)("h2",{id:"functions"},"Functions"),(0,a.kt)("h3",{id:"pluginbyname"},"pluginByName"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"pluginByName(targetPluginName: string): PluginMatcher")),(0,a.kt)("p",null,"Returns a ",(0,a.kt)("a",{parentName:"p",href:"#pluginmatcher"},"plugin matcher")," function to be used with other plugin utility functions to match a name to an existing plugin. This name is the plugin's constructor (",(0,a.kt)("inlineCode",{parentName:"p"},"plugin.constructor.name"),")."),(0,a.kt)("h3",{id:"getplugin"},"getPlugin"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"getPlugin(webpackConfig: WebpackConfig, matcher: PluginMatcher)")),(0,a.kt)("p",null,"Retrieve the ",(0,a.kt)("strong",{parentName:"p"},"first")," plugin for which the matcher returns true from the Webpack config."),(0,a.kt)("h4",{id:"return-type"},"Return Type"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"{\n  isFound: boolean;\n  match: WebpackPlugin;\n}\n")),(0,a.kt)("h4",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const { getPlugin, pluginByName } = require('@craco/craco');\n\nconst { isFound, match } = getPlugin(\n  webpackConfig,\n  pluginByName('ESLintWebpackPlugin')\n);\n\nif (isFound) {\n  // do stuff...\n}\n")),(0,a.kt)("h3",{id:"addplugins"},"addPlugins"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"addPlugins(webpackConfig: WebpackConfig, plugins: [WebpackPlugin | [WebpackPlugin, 'append' | 'prepend']]): void")),(0,a.kt)("p",null,"Add new plugins to the Webpack config. Plugins are added with the ",(0,a.kt)("a",{parentName:"p",href:"/docs/configuration/webpack#webpackpluginsadd"},"same syntax used within the CRACO config"),"."),(0,a.kt)("h4",{id:"usage-1"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const { addPlugins } = require('@craco/craco');\n\nconst myNewWebpackPlugin = require.resolve('ESLintWebpackPlugin');\n\naddPlugins(webpackConfig, [myNewWebpackPlugin]);\naddPlugins(webpackConfig, [[myNewWebpackPlugin, 'append']]);\naddPlugins(webpackConfig, [[myNewWebpackPlugin, 'prepend']]);\n")),(0,a.kt)("h3",{id:"removeplugins"},"removePlugins"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"removePlugins(webpackConfig: WebpackConfig, matcher: PluginMatcher)")),(0,a.kt)("p",null,"Remove ",(0,a.kt)("strong",{parentName:"p"},"all")," of the plugins for which the matcher returns true from the Webpack config."),(0,a.kt)("h4",{id:"return-type-1"},"Return Type"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"{\n  hasRemovedAny: boolean;\n  removedCount: number;\n}\n")),(0,a.kt)("h4",{id:"usage-2"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const { removePlugins, pluginByName } = require('@craco/craco');\n\nremovePlugins(webpackConfig, pluginByName('ESLintWebpackPlugin'));\n")),(0,a.kt)("h2",{id:"reference"},"Reference"),(0,a.kt)("h3",{id:"webpackconfig"},"WebpackConfig"),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"https://webpack.js.org/configuration/"},"https://webpack.js.org/configuration/"),"."),(0,a.kt)("h3",{id:"pluginmatcher"},"PluginMatcher"),(0,a.kt)("p",null,"A loader matcher should return true if the provided plugin matches the specified criteria. The function is of the following type:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"(plugin: WebpackPlugin) => boolean;\n")),(0,a.kt)("h3",{id:"webpackplugin"},"WebpackPlugin"),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"https://webpack.js.org/plugins/"},"https://webpack.js.org/plugins/"),"."))}s.isMDXComponent=!0}}]);